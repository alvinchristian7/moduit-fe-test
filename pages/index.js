import { useState, useEffect } from 'react'
import axios from 'axios'
import { useTry, useTryAsync } from "no-try";
import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'

import PerfectScrollbar from 'react-perfect-scrollbar'
import { Tabs, Tab, Box, Paper, FormControl, InputLabel, OutlinedInput, InputAdornment, IconButton } from '@mui/material'
import { CircleIcon } from '@mui/icons-material';
import CustomTable from 'components/CustomTable'
import LetterAvatar from 'components/LetterAvatar'
import Q1 from 'icon/Q1.svg'
import Q2 from 'icon/Q2.svg'
import SearchIcon from 'icon/search.svg'
import LogoImg from 'logo/logo.svg'

const pageConfig = [
  {
    title: 'Question 1',
    iconComp: <Q1 />,
    canSearch: false,
    url: 'https://screening.moduit.id/frontend/web/question/one',
  },
  {
    title: 'Question 2',
    iconComp: <Q2 />,
    canSearch: true,
    url: 'https://screening.moduit.id/frontend/web/question/two',
  },
]

const wrapperNoData = params => params.value ?? '-'

const columns = [
  {
    field: 'title', headerClassName: 'px-5', headerName: 'Product Name', width: 250, valueFormatter: wrapperNoData, renderCell: params => (
      <div className='flex gap-2 items-center -mt-2.5'>
        <LetterAvatar>{params.value}</LetterAvatar>
        <div>{params.value}</div>
      </div>
    )
  },
  { field: 'id', headerClassName: 'px-5', headerName: 'Product Code', width: 170, align: 'center', headerAlign: 'center', valueFormatter: wrapperNoData },
  { field: 'category', headerClassName: 'px-5', headerName: 'Category', width: 130, align: 'center', headerAlign: 'center', valueFormatter: wrapperNoData },
  { field: 'description', headerClassName: 'px-5', headerName: 'Description', width: 600, align: 'center', headerAlign: 'center', valueFormatter: wrapperNoData },
  {
    field: 'tags', headerClassName: 'px-5', headerName: 'Tags', width: 300, renderCell: params => {
      return params.value == null ? '-' : (
        <ul className="blueList">
          {params.value.map(str => (
            <li key={str}>
              {str}
            </li>
          ))}
        </ul>
      )
    }
  },
];

export default function Home() {
  const [value, setValue] = useState(0);
  const [searchText, setsearchText] = useState('');
  const [searchResults, setsearchResults] = useState(null);
  const [dataSource, setdataSource] = useState([]);
  const [loading, setloading] = useState(false);

  const handleChange = (event, newValue) => {
    setValue(newValue);
  };

  const handleSearch = (event) => {
    event.preventDefault()
    const isNotEmpty = Boolean(searchText)
    if(isNotEmpty){
      const res = dataSource.filter(obj => {
        const regexSearch = new RegExp(searchText, 'gi')
        const foundMatch = regexSearch.test(obj.title)
        return foundMatch
      })
      setsearchResults(res);
    } else {
      setsearchResults(null);
    }
  };

  const getTableData = async (val) => {
    setdataSource([])
    setloading(true)
    const [error, response] = await useTryAsync(() => axios({
      method: 'GET',
      url: pageConfig[val].url,
    }))
    setdataSource(response.data)
    setloading(false)
  }

  useEffect(() => {
    getTableData(value)
    setsearchText('')
    setsearchResults(null)
  }, [value])

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Box
        sx={{ flexGrow: 1, bgcolor: 'rgb(245, 248, 255)', display: 'flex', minHeight: '100vh' }}
      >
        <Paper id="leftTab" elevation={4}>
          <LogoImg id="logoImg" />
          <Tabs
            value={value}
            onChange={handleChange}
            orientation="vertical"
            aria-label="icon position tabs example"
          >
            {pageConfig.map(obj => (
              <Tab classes={{ root: 'verticalSidebar' }} icon={obj.iconComp} iconPosition="start" label={obj.title} key={obj.title} />
            ))}
          </Tabs>
        </Paper>
        <div id="rightTab" className='flex flex-col'>
          <main className={styles.main}>
            <div className='flex justify-between' style={{ minHeight: 37 }}>
              <h1 className='font-bold text-2xl'>
                {pageConfig[value].title}
              </h1>
              {pageConfig[value].canSearch && <form onSubmit={handleSearch}>
              <FormControl sx={{ width: '40ch' }} variant="outlined">
                <OutlinedInput
                  id="searchText"
                  classes={{
                    input: 'searchText'
                  }}
                  size="small"
                  type={'text'}
                  value={searchText}
                  onChange={({target: {value}}) => setsearchText(value)}
                  endAdornment={
                    <InputAdornment position="end">
                      <IconButton
                        type="submit"
                        color="default"
                        aria-label="search text"
                        edge="end"
                      >
                        <SearchIcon />
                      </IconButton>
                    </InputAdornment>
                  }
                  placeholder="Search by product name"
                />
              </FormControl>
              </form>}
            </div>
            <Paper elevation={4} className="h-full rounded-xl p-6">
              <PerfectScrollbar>
                <CustomTable
                  getRowHeight={() => 'auto'}
                  sx={{
                    '& .MuiDataGrid-cell': {
                      py: '24px',
                      alignItems: 'flex-start'
                    },
                  }}
                  loading={loading}
                  rows={searchResults ?? dataSource}
                  columns={columns}
                />
              </PerfectScrollbar>
            </Paper>
          </main>
          <footer className={styles.footer}>
            <span>Copyright Â© 2019&nbsp;</span>
            <a href="https://moduit.id/"
              target="_blank"
              rel="noopener noreferrer">PT. Moduit Digital Indonesia</a>
            <span>. All rights reserved.</span>
          </footer>
        </div>
      </Box>
    </div>
  )
}
